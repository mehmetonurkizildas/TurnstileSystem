// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231112152443_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Movement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EventType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("MovementTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Movements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 20, 21, 57, 808, DateTimeKind.Utc).AddTicks(2578),
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 17, 56, 15, 909, DateTimeKind.Utc).AddTicks(9078),
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 19, 27, 47, 9, DateTimeKind.Utc).AddTicks(916),
                            PersonId = 3
                        },
                        new
                        {
                            Id = 4,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 13, 56, 48, 582, DateTimeKind.Utc).AddTicks(7782),
                            PersonId = 4
                        },
                        new
                        {
                            Id = 5,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 12, 20, 5, 942, DateTimeKind.Utc).AddTicks(2958),
                            PersonId = 5
                        },
                        new
                        {
                            Id = 6,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 15, 56, 58, 42, DateTimeKind.Utc).AddTicks(9390),
                            PersonId = 6
                        },
                        new
                        {
                            Id = 7,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 17, 22, 8, 752, DateTimeKind.Utc).AddTicks(6673),
                            PersonId = 7
                        },
                        new
                        {
                            Id = 8,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 15, 35, 8, 48, DateTimeKind.Utc).AddTicks(9215),
                            PersonId = 8
                        },
                        new
                        {
                            Id = 9,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 14, 48, 44, 705, DateTimeKind.Utc).AddTicks(7799),
                            PersonId = 9
                        },
                        new
                        {
                            Id = 10,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 13, 50, 58, 727, DateTimeKind.Utc).AddTicks(3699),
                            PersonId = 10
                        },
                        new
                        {
                            Id = 11,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 15, 53, 59, 959, DateTimeKind.Utc).AddTicks(6341),
                            PersonId = 11
                        },
                        new
                        {
                            Id = 12,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 14, 31, 3, 588, DateTimeKind.Utc).AddTicks(2431),
                            PersonId = 12
                        },
                        new
                        {
                            Id = 13,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 19, 28, 43, 958, DateTimeKind.Utc).AddTicks(2615),
                            PersonId = 13
                        },
                        new
                        {
                            Id = 14,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 11, 52, 32, 466, DateTimeKind.Utc).AddTicks(4838),
                            PersonId = 14
                        },
                        new
                        {
                            Id = 15,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 13, 1, 28, 800, DateTimeKind.Utc).AddTicks(1440),
                            PersonId = 15
                        },
                        new
                        {
                            Id = 16,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 10, 44, 45, 730, DateTimeKind.Utc).AddTicks(3897),
                            PersonId = 16
                        },
                        new
                        {
                            Id = 17,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 14, 21, 56, 954, DateTimeKind.Utc).AddTicks(9941),
                            PersonId = 17
                        },
                        new
                        {
                            Id = 18,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 14, 49, 46, 582, DateTimeKind.Utc).AddTicks(801),
                            PersonId = 18
                        },
                        new
                        {
                            Id = 19,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 14, 6, 46, 797, DateTimeKind.Utc).AddTicks(4323),
                            PersonId = 19
                        },
                        new
                        {
                            Id = 20,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 17, 22, 26, 893, DateTimeKind.Utc).AddTicks(4379),
                            PersonId = 20
                        },
                        new
                        {
                            Id = 21,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 10, 43, 33, 618, DateTimeKind.Utc).AddTicks(3245),
                            PersonId = 21
                        },
                        new
                        {
                            Id = 22,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 13, 42, 29, 636, DateTimeKind.Utc).AddTicks(6957),
                            PersonId = 22
                        },
                        new
                        {
                            Id = 23,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 18, 58, 18, 312, DateTimeKind.Utc).AddTicks(2755),
                            PersonId = 23
                        },
                        new
                        {
                            Id = 24,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 15, 43, 34, 234, DateTimeKind.Utc).AddTicks(7869),
                            PersonId = 24
                        },
                        new
                        {
                            Id = 25,
                            EventType = 1,
                            MovementTime = new DateTime(2023, 11, 12, 13, 0, 2, 365, DateTimeKind.Utc).AddTicks(2912),
                            PersonId = 25
                        });
                });

            modelBuilder.Entity("Domain.Entities.MovementReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FirstEntryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastEntryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("MovementReports");
                });

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "bilgeisbaratamgan.gunday97@yahoo.com",
                            FirstName = "Akkuş",
                            LastName = "Balaban",
                            PhoneNumber = "+90-671-202-09-72"
                        },
                        new
                        {
                            Id = 2,
                            Email = "irtis43@hotmail.com",
                            FirstName = "Akçora",
                            LastName = "Uca",
                            PhoneNumber = "+90-619-896-6-244"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ilbilge_gumuspala@hotmail.com",
                            FirstName = "Ayızdağ",
                            LastName = "Yıldırım ",
                            PhoneNumber = "+90-650-645-92-37"
                        },
                        new
                        {
                            Id = 4,
                            Email = "budag.durak10@hotmail.com",
                            FirstName = "Bozan",
                            LastName = "Mayhoş",
                            PhoneNumber = "+90-814-010-2-282"
                        },
                        new
                        {
                            Id = 5,
                            Email = "budak96@yahoo.com",
                            FirstName = "Büküşboğa",
                            LastName = "Tekand",
                            PhoneNumber = "+90-408-298-0-678"
                        },
                        new
                        {
                            Id = 6,
                            Email = "basar.gonultas37@yahoo.com",
                            FirstName = "Azak",
                            LastName = "Çevik",
                            PhoneNumber = "+90-518-066-49-89"
                        },
                        new
                        {
                            Id = 7,
                            Email = "gulegen.turkyilmaz@gmail.com",
                            FirstName = "Bölen",
                            LastName = "Solmaz",
                            PhoneNumber = "+90-900-983-02-55"
                        },
                        new
                        {
                            Id = 8,
                            Email = "bokde.denkel24@hotmail.com",
                            FirstName = "Asuğ",
                            LastName = "Eliçin",
                            PhoneNumber = "+90-229-275-43-70"
                        },
                        new
                        {
                            Id = 9,
                            Email = "beltir_kunter@gmail.com",
                            FirstName = "Baran",
                            LastName = "Türkyılmaz",
                            PhoneNumber = "+90-097-124-4-414"
                        },
                        new
                        {
                            Id = 10,
                            Email = "boga.dalkiran@gmail.com",
                            FirstName = "Bulak",
                            LastName = "Karadaş",
                            PhoneNumber = "+90-890-518-6-941"
                        },
                        new
                        {
                            Id = 11,
                            Email = "aygirak.aydan@hotmail.com",
                            FirstName = "Atalan",
                            LastName = "Kahveci",
                            PhoneNumber = "+90-896-248-4-205"
                        },
                        new
                        {
                            Id = 12,
                            Email = "berginsenge_sepetci46@yahoo.com",
                            FirstName = "Açuk",
                            LastName = "Erkekli",
                            PhoneNumber = "+90-598-169-94-66"
                        },
                        new
                        {
                            Id = 13,
                            Email = "aruk.berberoglu68@gmail.com",
                            FirstName = "Bardıbay",
                            LastName = "Kocabıyık",
                            PhoneNumber = "+90-756-518-20-94"
                        },
                        new
                        {
                            Id = 14,
                            Email = "buluc10@yahoo.com",
                            FirstName = "Basu",
                            LastName = "Doğan ",
                            PhoneNumber = "+90-632-424-9-320"
                        },
                        new
                        {
                            Id = 15,
                            Email = "balcar14@hotmail.com",
                            FirstName = "Çağatay",
                            LastName = "Korol",
                            PhoneNumber = "+90-205-693-80-30"
                        },
                        new
                        {
                            Id = 16,
                            Email = "barbol_akal@gmail.com",
                            FirstName = "Alpata",
                            LastName = "Aydan",
                            PhoneNumber = "+90-849-193-39-31"
                        },
                        new
                        {
                            Id = 17,
                            Email = "bakagul.aykac99@hotmail.com",
                            FirstName = "Aldemir",
                            LastName = "Menemencioğlu",
                            PhoneNumber = "+90-688-283-5-752"
                        },
                        new
                        {
                            Id = 18,
                            Email = "aybeg23@yahoo.com",
                            FirstName = "Balkık",
                            LastName = "Karadaş",
                            PhoneNumber = "+90-268-232-43-14"
                        },
                        new
                        {
                            Id = 19,
                            Email = "barskan4@hotmail.com",
                            FirstName = "Alpturan",
                            LastName = "Özbey",
                            PhoneNumber = "+90-855-637-47-56"
                        },
                        new
                        {
                            Id = 20,
                            Email = "agabay60@hotmail.com",
                            FirstName = "Berendey",
                            LastName = "Demirel",
                            PhoneNumber = "+90-170-520-56-12"
                        },
                        new
                        {
                            Id = 21,
                            Email = "ila73@gmail.com",
                            FirstName = "Altın",
                            LastName = "Ekşioğlu",
                            PhoneNumber = "+90-821-591-3-504"
                        },
                        new
                        {
                            Id = 22,
                            Email = "bitri.catalbas98@yahoo.com",
                            FirstName = "Bölükbaşı",
                            LastName = "Yazıcı",
                            PhoneNumber = "+90-602-123-0-334"
                        },
                        new
                        {
                            Id = 23,
                            Email = "baskin_durmaz@hotmail.com",
                            FirstName = "Bakırsokum",
                            LastName = "Toraman",
                            PhoneNumber = "+90-251-013-1-390"
                        },
                        new
                        {
                            Id = 24,
                            Email = "gunes55@gmail.com",
                            FirstName = "Adıkutlu",
                            LastName = "Ertepınar",
                            PhoneNumber = "+90-055-705-60-10"
                        },
                        new
                        {
                            Id = 25,
                            Email = "abar95@yahoo.com",
                            FirstName = "Bekeçtegin",
                            LastName = "Çetin",
                            PhoneNumber = "+90-904-449-79-15"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Movement", b =>
                {
                    b.HasOne("Domain.Entities.Person", "Person")
                        .WithMany("Movements")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Entities.MovementReport", b =>
                {
                    b.HasOne("Domain.Entities.Person", "Person")
                        .WithMany("MovementReports")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.Navigation("MovementReports");

                    b.Navigation("Movements");
                });
#pragma warning restore 612, 618
        }
    }
}
